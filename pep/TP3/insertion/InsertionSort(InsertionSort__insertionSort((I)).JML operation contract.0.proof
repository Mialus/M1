\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 05 08:45:35 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Apr 05 08:45:35 CEST 2016
name=InsertionSort[InsertionSort\\:\\:insertionSort([I)].JML operation contract.0
contract=InsertionSort[InsertionSort\\:\\:insertionSort([I)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Pierre" ) (keyVersion "f29c982fc6c75827991e94a2a905e3419d01d6ee"))

(autoModeTime "4015")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
(builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,1,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_InsertionSort" (formula "7") (ifseqformula "3"))
(rule "true_left" (formula "7"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_insertionSort,savedHeapBefore_insertionSort,_tabBefore_insertionSort"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(builtin "Loop Invariant" (formula "9") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
   (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
   (rule "translateJavaAddInt" (formula "9") (term "0,2,1,1,0,1"))
   (rule "qeq_literals" (formula "9") (term "0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "sub_literals" (formula "9") (term "1,1,0,0,1"))
   (rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1"))
   (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "allRight" (formula "9") (inst "sk=k_5"))
   (rule "impRight" (formula "9"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_leqRight" (formula "11"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "mul_literals" (formula "3") (term "1"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
   (rule "qeq_literals" (formula "2") (term "0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "closeFalse" (formula "2"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1"))
   (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1,0,0,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "11") (term "0,2,1,1,0,1,0,0,1,1,0,1,1"))
   (rule "andLeft" (formula "8"))
   (rule "impRight" (formula "12"))
   (rule "andLeft" (formula "9"))
   (rule "eqSymm" (formula "14") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
   (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "11") (term "0,2,1,1,0"))
   (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0,0,1,1,0,1"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "14") (term "1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "14") (term "0,1,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0,1"))
   (rule "compound_less_than_comparison_2" (formula "11") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
   (rule "assignment_read_length" (formula "11"))
   (branch "Normal Execution (_tab != null)"
      (builtin "One Step Simplification" (formula "11"))
      (rule "less_than_comparison_simple" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "emptyModality" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "notRight" (formula "11"))
      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0"))
      (rule "qeq_literals" (formula "10") (term "0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthIsAShort" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
      (rule "leq_literals" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
      (rule "compound_less_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_5"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_6"))
      (rule "assignment_read_length" (formula "13"))
      (branch "Normal Execution (_tab != null)"
         (builtin "One Step Simplification" (formula "13"))
         (rule "less_than_comparison_simple" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "13") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "ifSplit" (formula "13"))
         (branch "if x_4 true"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "methodCallWithinClass" (formula "13") (term "1"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "tab_1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "i_1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_decalage,savedHeapBefore_decalage,i_1Before_decalage,tab_1Before_decalage"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "t"))
            (rule "assignment_array2" (formula "13"))
            (branch "Normal Execution (tab_1 != null)"
               (builtin "One Step Simplification" (formula "13"))
               (rule "pullOutSelect" (formula "13") (term "0,1,0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "j"))
               (rule "for_to_while" (formula "13") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
               (rule "assignmentSubtractionInt" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "translateJavaSubInt" (formula "13") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "13") (term "0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "13") (term "0,1,0"))
               (builtin "Loop Invariant" (formula "13") (newnames "variant_0,b_0,heapBefore_LOOP_0,jBefore_LOOP,j_0,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
               (branch "Invariant Initially Valid"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "wellFormedAnon" (formula "13") (term "1"))
                  (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0,1,0,0"))
                  (rule "translateJavaAddInt" (formula "13") (term "0,2,0,1,0,0,0"))
                  (rule "translateJavaAddInt" (formula "13") (term "0,1,1,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "13") (term "1,0,1,0"))
                  (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "13") (term "1,1,1,0,0,0,0"))
                  (rule "translateJavaUnaryMinusInt" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "13") (term "1,0,1,0,0,0,0"))
                  (rule "neg_literal" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "8")))
                  (rule "polySimp_elimSub" (formula "13") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,1,0,0,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,1"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,2,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,2,0,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,2,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet00001_0" (formula "13") (term "0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00001_1" (formula "13") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0,1,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,1,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1"))
                  (rule "leq_literals" (formula "13") (term "0,1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "0,0,1,0,0"))
                  (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1,0"))
                  (rule "add_literals" (formula "13") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "13") (term "0,1,0"))
                  (rule "leq_literals" (formula "13") (term "1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0"))
                  (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_invertInEq0" (formula "13") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                  (rule "times_zero_2" (formula "13") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                  (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "9"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "allRight" (formula "13") (inst "sk=k_4"))
                  (rule "impRight" (formula "13"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_47"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_48"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "allLeft" (formula "13") (inst "t=k_4"))
                  (rule "replaceKnownSelect_taclet000001_4" (formula "13") (term "1,1"))
                  (rule "replaceKnownSelect_taclet000001_2" (formula "13") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000001_5" (formula "13") (term "1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000001_3" (formula "13") (term "0,1"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0"))
                  (rule "add_literals" (formula "13") (term "0"))
                  (rule "leq_literals" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
               (branch "Body Preserves Invariant"
                  (builtin "One Step Simplification" (formula "12"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,1,1,0,0,0"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,0,1,0,0,0"))
                  (rule "translateJavaUnaryMinusInt" (formula "12") (term "1,0,0,0,0"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,2,0,1,0,0"))
                  (rule "translateJavaSubInt" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "15") (term "1,0,1,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaSubInt" (formula "15") (term "1,0,1,0,0,0,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,1,1,1,0,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,2,0,1,0,0,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,1,1,0,0,0,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaUnaryMinusInt" (formula "15") (term "1,0,0,0,0,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,2,1,1,0,1,0,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,2,1,1,0,1,1,0,0,1,1,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "15") (term "0,1,1,1,1,0,1,1"))
                  (rule "neg_literal" (formula "12") (term "1,0,0,0,0"))
                  (rule "neg_literal" (formula "15") (term "1,0,0,0,0,0,0,1,1,1,0,1,1"))
                  (rule "andLeft" (formula "12"))
                  (rule "impRight" (formula "16"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "14"))
                  (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "1,1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "21") (term "1,0,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "21") (term "1,0,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "1"))
                  (rule "mul_literals" (formula "14") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "15") (term "1"))
                  (rule "mul_literals" (formula "15") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,2,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,2,0,1,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,2,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "1,0,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "21") (term "1,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1"))
                  (rule "polySimp_addComm0" (formula "15") (term "1"))
                  (rule "elementOfArrayRange" (formula "21") (term "0,0,0,0,1,0,1,1,1,0,1") (inst "iv=iv"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,0,1,0,1,1,1,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "21") (term "1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0"))
                  (rule "variableDeclarationAssign" (formula "1") (term "1"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_2"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "break_0"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "brk"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "variableDeclarationAssign" (formula "21") (term "1"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "exc_2"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "variableDeclaration" (formula "21") (term "1") (newnames "thrownExc_1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                  (rule "mul_literals" (formula "15") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,1,0,0,0,0,0,1,1,1,0,1"))
                  (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_16"))
                  (rule "simplifySelectOfAnon" (formula "16"))
                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")) (ifInst ""  (formula "6")))
                  (rule "elementOfArrayRange" (formula "16") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "17"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                  (rule "mul_literals" (formula "13") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "add_zero_left" (formula "13") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "pullOutSelect" (formula "16") (term "2,0") (inst "selectSK=arr_17"))
                  (rule "simplifySelectOfAnon" (formula "16"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,1"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1"))
                  (rule "nnf_imp2or" (formula "22") (term "0,1,1,0,0,1,1,1,0,1"))
                  (rule "nnf_imp2or" (formula "22") (term "0,1,0,0,0,1,1,1,0,1"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,0,0,1,1,1,0,1"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0,0,0,1,1,1,0,1"))
                  (rule "applyEq_and_int4" (formula "15") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,0,0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "1,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "greater_equal_than_comparison_simple" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "applyEq_and_int6" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "1,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "methodCallEmpty" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "emptyModality" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "notRight" (formula "18"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_9"))
                  (rule "greater_equal_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "replace_known_left" (formula "20") (term "0,0,1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_9 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_10"))
                     (rule "compound_less_equal_than_comparison_1" (formula "20") (term "1") (inst "#v0=x_11"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_11"))
                     (rule "assignment_array2" (formula "20"))
                     (branch "Normal Execution (tab_1 != null)"
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_18"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_19"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "applyEq_and_int4" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "commute_and" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "1") (term "0,0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "less_equal_than_comparison_simple" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "ifSplit" (formula "20"))
                        (branch "if x_10 true"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "assignment" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "assignment" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "blockBreakNoLabel" (formula "21") (term "1"))
                           (rule "blockBreakNoLabel" (formula "21") (term "1"))
                           (rule "blockBreakLabel" (formula "21") (term "1"))
                           (rule "blockEmpty" (formula "21") (term "1"))
                           (rule "tryEmpty" (formula "21") (term "1"))
                           (rule "methodCallEmpty" (formula "21") (term "1"))
                           (rule "emptyModality" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "ifSplit" (formula "21"))
                           (branch "if break_0 true"
                              (builtin "One Step Simplification" (formula "22"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "break" (formula "21") (term "1"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "eval_order_array_access2" (formula "21") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_3"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_16"))
                              (rule "assignmentAdditionInt" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                              (rule "assignment_to_primitive_array_component" (formula "21"))
                              (branch "Normal Execution (x_arr_3 != null)"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "methodCallEmpty" (formula "21") (term "1"))
                                 (rule "blockEmpty" (formula "21") (term "1"))
                                 (rule "postincrement" (formula "21") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_17"))
                                 (rule "remove_parentheses_right" (formula "21") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "21") (term "1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                 (rule "assignment" (formula "21") (term "1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "tryEmpty" (formula "21") (term "1"))
                                 (rule "methodCallEmpty" (formula "21") (term "1"))
                                 (rule "emptyModality" (formula "21") (term "1"))
                                 (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "3")))
                                 (rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,1,1,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "1,1,0,0,1,0,0"))
                                 (rule "precOfInt" (formula "21") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1"))
                                 (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,1"))
                                 (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,1"))
                                 (rule "add_literals" (formula "21") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "21") (term "0,1,1"))
                                 (rule "leq_literals" (formula "21") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                 (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_invertInEq0" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (term "0,0") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "21") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "andRight" (formula "21"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "21") (inst "sk=k_3"))
                                    (rule "orRight" (formula "21"))
                                    (rule "orRight" (formula "21"))
                                    (rule "inEqSimp_geqRight" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "23"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_37"))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_38"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                                    (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_39"))
                                    (rule "simplifySelectOfStore" (formula "5"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "castDel" (formula "5") (term "1,0"))
                                    (rule "eqSymm" (formula "5") (term "0,0"))
                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_40"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_41"))
                                    (rule "simplifySelectOfAnon" (formula "5"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "14")))
                                    (rule "elementOfArrayRange" (formula "5") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "eqSymm" (formula "5") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_42"))
                                    (rule "simplifySelectOfAnon" (formula "5"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq_and_int4" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq_and_int4" (formula "5") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "commute_and" (formula "3") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq_and_int6" (formula "4") (term "0,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "cut_direct" (formula "23") (term "0"))
                                    (branch "CUT: j_0 <= -2 + i_0 TRUE"
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "23"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "k_3 = j_0 TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                          (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                          (rule "equal_literals" (formula "3") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "applyEqRigid" (formula "3") (term "0,2,0,1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "k_3 = j_0 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "k_3 = 1 + j_0 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "4") (term "1,0,2,0") (ifseqformula "3"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,2,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,2,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "3"))
                                             (rule "polySimp_homoEq" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0"))
                                             (rule "add_literals" (formula "23") (term "0"))
                                             (rule "equal_literals" (formula "23"))
                                             (rule "false_right" (formula "23"))
                                             (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "replaceKnownSelect_taclet100001_2" (formula "20") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "20") (term "1,1"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1"))
                                             (rule "add_literals" (formula "20") (term "0,0,2,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "19"))
                                             (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                             (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "leq_literals" (formula "20") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_45"))
                                             (rule "simplifySelectOfAnon" (formula "20"))
                                             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "10")))
                                             (rule "elementOfArrayRange" (formula "20") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "eqSymm" (formula "20") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "21"))
                                             (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_46"))
                                             (rule "simplifySelectOfAnon" (formula "20"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                                             (rule "hideAuxiliaryEq" (formula "20"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "applyEq_and_int4" (formula "21") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEq_and_int6" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0"))
                                             (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "21"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                                             (rule "hideAuxiliaryEq" (formula "21"))
                                             (rule "inEqSimp_commuteLeq" (formula "17"))
                                             (rule "inEqSimp_commuteLeq" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "17"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "k_3 = 1 + j_0 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "allLeft" (formula "15") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet00100001_7" (formula "15") (term "1,1"))
                                             (rule "replaceKnownSelect_taclet100001_3" (formula "15") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00100001_8" (formula "15") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001_4" (formula "15") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                             (rule "leq_literals" (formula "15") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "replaceKnownSelect_taclet100001_2" (formula "22") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "22") (term "1,1"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,2,0,1"))
                                             (rule "add_literals" (formula "22") (term "0,0,2,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "leq_literals" (formula "22") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_43"))
                                             (rule "simplifySelectOfAnon" (formula "22"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "11")))
                                             (rule "elementOfArrayRange" (formula "22") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "23"))
                                             (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "22") (term "2,0") (inst "selectSK=arr_44"))
                                             (rule "simplifySelectOfAnon" (formula "22"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "applyEqReverse" (formula "23") (term "2,0") (ifseqformula "22"))
                                             (rule "hideAuxiliaryEq" (formula "22"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "23"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "19") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "applyEq_and_int4" (formula "23") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "commute_and" (formula "23") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "castDel" (formula "23") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "23"))
                                             (rule "allLeft" (formula "24") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet100001_2" (formula "24") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet00100001_6" (formula "24") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "24") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00100001_9" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "25") (inst "t=k_3"))
                                             (rule "replaceKnownSelect_taclet000000100001_11" (formula "25") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet000000100001_15" (formula "25") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000100001_18" (formula "25") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000000100001_19" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                             (rule "leq_literals" (formula "25") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "2"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0"))
                                             (rule "add_literals" (formula "25") (term "0"))
                                             (rule "leq_literals" (formula "25"))
                                             (rule "closeFalse" (formula "25"))
                                          )
                                       )
                                    )
                                    (branch "CUT: j_0 <= -2 + i_0 FALSE"
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_leqRight" (formula "23"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "20"))
                                       (rule "applyEq" (formula "23") (term "1,0,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,2,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,2,0"))
                                       (rule "applyEqRigid" (formula "22") (term "1,1") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                       (rule "add_literals" (formula "22") (term "0,1"))
                                       (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "20"))
                                       (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0"))
                                       (rule "qeq_literals" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "applyEqRigid" (formula "21") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "5") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,1,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "1,0,0"))
                                       (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "k_3 = -1 + i_0 TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "qeq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "k_3 = -1 + i_0 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "19"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "0,1"))
                                          (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "3"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "false_right" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "18") (inst "t=k_3"))
                                          (rule "replaceKnownSelect_taclet000000100001_11" (formula "18") (term "0,1"))
                                          (rule "replaceKnownSelect_taclet000000100001_15" (formula "18") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000100001_18" (formula "18") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000100001_19" (formula "18") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "18") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "21") (inst "sk=f_3"))
                                    (rule "allRight" (formula "21") (inst "sk=o_3"))
                                    (rule "orRight" (formula "21"))
                                    (rule "orRight" (formula "21"))
                                    (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_3_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "19") (term "0"))
                                    (branch "CUT: j_0 <= -2 + i_0 TRUE"
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " !o_3 = null & !( o_3.<created> = TRUE | o_3.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "21"))
                                          (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "20")))
                                          (rule "closeTrue" (formula "25"))
                                       )
                                       (branch " !o_3 = null & !( o_3.<created> = TRUE | o_3.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                                          (rule "close" (formula "25") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "CUT: j_0 <= -2 + i_0 FALSE"
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_leqRight" (formula "19"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "20") (term "1,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "19") (term "1,0,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,2,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,2,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,2,0"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,0"))
                                       (rule "times_zero_1" (formula "16") (term "0"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                       (rule "add_literals" (formula "16") (term "0,1"))
                                       (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " !o_3 = null & !( o_3.<created> = TRUE | o_3.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "orRight" (formula "18"))
                                          (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "23"))
                                          (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "17")))
                                          (rule "closeTrue" (formula "22"))
                                       )
                                       (branch " !o_3 = null & !( o_3.<created> = TRUE | o_3.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                                          (rule "close" (formula "22") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (x_arr_3 = null)"
                                 (rule "false_right" (formula "22"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_3 != null, but x_16 Out of Bounds!)"
                                 (rule "false_right" (formula "22"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0"))
                                 (rule "add_literals" (formula "16") (term "0"))
                                 (rule "leq_literals" (formula "16"))
                                 (rule "closeFalse" (formula "16"))
                              )
                           )
                           (branch "if break_0 false"
                              (builtin "One Step Simplification" (formula "22"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_10 false"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "eval_order_array_access2" (formula "21") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_1"))
                           (rule "assignment" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_12"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "assignmentAdditionInt" (formula "21") (term "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                           (rule "eval_order_array_access3" (formula "21") (inst "#v1=x_14") (inst "#v2=x_13") (inst "#v0=x_arr_2"))
                           (branch "ArrayIndexOutOfBounds (x_12<0 | x_12>=x_arr_1.length)"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0"))
                              (rule "mul_literals" (formula "21") (term "1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1"))
                              (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_geqRight" (formula "21"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Normal Execution"
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_2"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_13"))
                              (rule "assignment" (formula "21") (term "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "variableDeclarationAssign" (formula "21") (term "1"))
                              (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_14"))
                              (rule "assignment_array2" (formula "21"))
                              (branch "Normal Execution (tab_1 != null)"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "replaceKnownSelect_taclet00100001_6" (formula "21") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00100001_9" (formula "21") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "21"))
                                 (branch "Normal Execution (x_arr_2 != null)"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "blockEmpty" (formula "21") (term "1"))
                                    (rule "unusedLabel" (formula "21") (term "1"))
                                    (rule "postdecrement" (formula "21") (term "1"))
                                    (rule "compound_subtraction_1" (formula "21") (term "1") (inst "#v=x"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                    (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_15"))
                                    (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                    (rule "assignment" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                    (rule "tryEmpty" (formula "21") (term "1"))
                                    (rule "methodCallEmpty" (formula "21") (term "1"))
                                    (rule "emptyModality" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1,1,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,1,1,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,2,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,2,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,2,0,1,0,0,0,0"))
                                    (rule "precOfInt" (formula "21") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "21") (term "0,1,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "0,1,1"))
                                    (rule "leq_literals" (formula "21") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1"))
                                    (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,1,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_invertInEq0" (formula "21") (term "0,0,0,0,0"))
                                    (rule "times_zero_2" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0,0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (term "1,0,0,0,0") (ifseqformula "15"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_subsumption0" (formula "21") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "pullOutSelect" (formula "21") (term "0,0,0,0") (inst "selectSK=arr_20"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet00100001_6" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00100001_9" (formula "1") (term "2,0"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "22") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "nnf_notOr" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "andRight" (formula "21"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "21"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "21") (inst "sk=k_2"))
                                          (rule "orRight" (formula "21"))
                                          (rule "orRight" (formula "21"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_31"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "castDel" (formula "3") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "11")))
                                          (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_32"))
                                          (rule "simplifySelectOfStore" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "castDel" (formula "5") (term "1,0"))
                                          (rule "eqSymm" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "simplifySelectOfAnon" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                                          (rule "elementOfArrayRange" (formula "5") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "eqSymm" (formula "5") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_33"))
                                          (rule "simplifySelectOfAnon" (formula "4"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_34"))
                                          (rule "simplifySelectOfAnon" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq_and_int4" (formula "5") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (term "1,0,0,0,0") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "5") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "cut_direct" (formula "23") (term "0"))
                                          (branch "CUT: j_0 <= -2 + i_0 TRUE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "3") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq_and_int4" (formula "6") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "commute_and" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "castDel" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                             (rule "commute_and" (formula "6") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "castDel" (formula "6") (term "0,0,0"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "k_2 <= -1 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (term "0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "4") (term "0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "mul_literals" (formula "4") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "allLeft" (formula "20") (inst "t=k_2"))
                                                (rule "replaceKnownSelect_taclet00001100100001_15" (formula "20") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet00001100100001_13" (formula "20") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000001100100001_21" (formula "20") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000001100100001_20" (formula "20") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,1"))
                                                (rule "leq_literals" (formula "20") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0"))
                                                (rule "add_literals" (formula "20") (term "0"))
                                                (rule "leq_literals" (formula "20"))
                                                (rule "closeFalse" (formula "20"))
                                             )
                                             (branch "k_2 <= -1 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_leqRight" (formula "23"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "CUT: j_0 <= -2 + i_0 FALSE"
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_leqRight" (formula "23"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "20"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                             (rule "add_literals" (formula "22") (term "0,1"))
                                             (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqRigid" (formula "21") (term "1,0,2,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,2,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,2,0"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "0,1"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "20"))
                                             (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,0"))
                                             (rule "times_zero_1" (formula "20") (term "0"))
                                             (rule "qeq_literals" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "applyEq_and_int4" (formula "6") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "commute_and" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "castDel" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "applyEq_and_int6" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,1,0,0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0,1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), k_2)"))
                                             (rule "replaceKnownSelect_taclet00001100100001_13" (formula "18") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001100100001_20" (formula "18") (term "1,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,2,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "18") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "18") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_35"))
                                             (rule "simplifySelectOfAnon" (formula "18"))
                                             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")) (ifInst ""  (formula "11")))
                                             (rule "elementOfArrayRange" (formula "18") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "eqSymm" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "18") (term "2,0") (inst "selectSK=arr_36"))
                                             (rule "simplifySelectOfAnon" (formula "18"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "applyEq_and_int4" (formula "18") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (term "1,0,0,0,0") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "commute_and" (formula "18") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "castDel" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "18") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "18"))
                                             (rule "hideAuxiliaryEq" (formula "18"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "allLeft" (formula "15") (inst "t=k_2"))
                                             (rule "replaceKnownSelect_taclet00001100100001_16" (formula "15") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet00001100100001_18" (formula "15") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00001100100001_17" (formula "15") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00001100100001_19" (formula "15") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "15") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "15") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), k_2)"))
                                             (rule "replaceKnownSelect_taclet00001100100001_16" (formula "16") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00001100100001_17" (formula "16") (term "1,1"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,2,0,1"))
                                             (rule "add_literals" (formula "16") (term "0,0,2,0,1"))
                                             (rule "replaceKnownSelect_taclet100001100100001_23" (formula "16") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001100100001_24" (formula "16") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "leq_literals" (formula "16") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "allLeft" (formula "21") (inst "t=k_2"))
                                             (rule "replaceKnownSelect_taclet00001100100001_13" (formula "21") (term "0,1"))
                                             (rule "replaceKnownSelect_taclet00001100100001_15" (formula "21") (term "1,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001100100001_20" (formula "21") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001100100001_21" (formula "21") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "21") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                             (rule "leq_literals" (formula "21") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "21") (inst "sk=k_1"))
                                          (rule "orRight" (formula "21"))
                                          (rule "orRight" (formula "21"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "22"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_21"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "castDel" (formula "3") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_22"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                                          (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_23"))
                                          (rule "simplifySelectOfStore" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "castDel" (formula "5") (term "1,0"))
                                          (rule "eqSymm" (formula "5") (term "0,0"))
                                          (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_24"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_25"))
                                          (rule "simplifySelectOfAnon" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "14")))
                                          (rule "elementOfArrayRange" (formula "5") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "eqSymm" (formula "5") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_26"))
                                          (rule "simplifySelectOfAnon" (formula "5"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq_and_int4" (formula "3") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (term "1,0,0,0,0") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "3") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "cut_direct" (formula "25") (term "0"))
                                          (branch "CUT: j_0 <= -2 + i_0 TRUE"
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0"))
                                             (rule "qeq_literals" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                                             (rule "times_zero_1" (formula "9") (term "0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEq_and_int4" (formula "5") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEq_and_int6" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq_and_int6" (formula "4") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "4") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "0,0,1,0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "k_1 = j_0 TRUE"
                                                (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                (rule "polySimp_homoEq" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                (rule "equal_literals" (formula "4") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "3") (term "0,2,0,1,0") (ifseqformula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_literals" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "k_1 = j_0 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "k_1 = 1 + j_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                                                   (rule "polySimp_homoEq" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_literals" (formula "23") (term "0"))
                                                   (rule "equal_literals" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "applyEqRigid" (formula "4") (term "1,0,2,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,2,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,2,0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), j_0)"))
                                                   (rule "replaceKnownSelect_taclet100001_2" (formula "20") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "20") (term "1,1"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "20") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "20") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_29"))
                                                   (rule "simplifySelectOfAnon" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "10")))
                                                   (rule "elementOfArrayRange" (formula "20") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "21"))
                                                   (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "20") (term "2,0") (inst "selectSK=arr_30"))
                                                   (rule "simplifySelectOfAnon" (formula "20"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "applyEqReverse" (formula "21") (term "2,0") (ifseqformula "20"))
                                                   (rule "hideAuxiliaryEq" (formula "20"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                   (rule "applyEq_and_int4" (formula "21") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "commute_and" (formula "21") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "castDel" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                                                   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "21"))
                                                   (rule "hideAuxiliaryEq" (formula "21"))
                                                   (rule "inEqSimp_commuteLeq" (formula "21"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "21"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                   (rule "allLeft" (formula "23") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet100001_2" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet00100001_6" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00100001_9" (formula "23") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "23"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0"))
                                                   (rule "add_literals" (formula "21") (term "0"))
                                                   (rule "leq_literals" (formula "21"))
                                                   (rule "closeFalse" (formula "21"))
                                                )
                                                (branch "k_1 = 1 + j_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), j_0)"))
                                                   (rule "replaceKnownSelect_taclet100001_2" (formula "21") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "21") (term "1,1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,2,0,1"))
                                                   (rule "add_literals" (formula "21") (term "0,0,2,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "21") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_27"))
                                                   (rule "simplifySelectOfAnon" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "11")))
                                                   (rule "elementOfArrayRange" (formula "21") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22"))
                                                   (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_28"))
                                                   (rule "simplifySelectOfAnon" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
                                                   (rule "hideAuxiliaryEq" (formula "21"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "22"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "applyEq_and_int4" (formula "22") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "22") (term "1,0,0,0,0") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "applyEq_and_int6" (formula "22") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0"))
                                                   (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "22"))
                                                   (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
                                                   (rule "hideAuxiliaryEq" (formula "22"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "allLeft" (formula "23") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet100001_2" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet00100001_6" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100001_5" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00100001_9" (formula "23") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "allLeft" (formula "24") (inst "t=k_1"))
                                                   (rule "replaceKnownSelect_taclet10001100100001_13" (formula "24") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet10001100100001_17" (formula "24") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010001100100001_20" (formula "24") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010001100100001_21" (formula "24") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "24") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "CUT: j_0 <= -2 + i_0 FALSE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_leqRight" (formula "25"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "25") (term "1,0,2,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,2,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,2,0"))
                                             (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "23") (term "1,1") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                             (rule "add_literals" (formula "23") (term "0,1"))
                                             (rule "applyEqRigid" (formula "7") (term "0,2,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "22"))
                                             (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "1,0"))
                                             (rule "times_zero_1" (formula "22") (term "0"))
                                             (rule "qeq_literals" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,1,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "1,0,0"))
                                             (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_contradEq3" (formula "7") (term "0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq_and_int4" (formula "6") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEq_and_int6" (formula "4") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,0"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "commute_and" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "castDel" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "k_1 = -1 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch "k_1 = -1 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "19"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                (rule "add_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "2"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "false_right" (formula "19"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "18") (inst "t=k_1"))
                                                (rule "replaceKnownSelect_taclet10001100100001_17" (formula "18") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet10001100100001_13" (formula "18") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet110001100100001_22" (formula "18") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet110001100100001_21" (formula "18") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                (rule "leq_literals" (formula "18") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "closeFalse" (formula "18"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "21") (inst "sk=f_2"))
                                       (rule "allRight" (formula "21") (inst "sk=o_2"))
                                       (rule "orRight" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "eqSymm" (formula "21") (term "0,0,0,1"))
                                       (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=f_2_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_2_1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet1001100100001_12" (formula "1") (term "2,0"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "shift_paren_and" (formula "25"))
                                       (rule "commute_and" (formula "3") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "3") (term "0,0"))
                                       (rule "commute_or" (formula "3") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "commute_or" (formula "3") (term "0,1,0,0"))
                                       (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
                                       (rule "commute_or" (formula "3") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "3") (term "0,0,0,0"))
                                       (rule "shift_paren_and" (formula "3") (term "0,0"))
                                       (rule "cut_direct" (formula "21") (term "0"))
                                       (branch "CUT: j_0 <= -2 + i_0 TRUE"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "21"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                          (rule "times_zero_1" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " (!f_2 = java.lang.Object::<created> | !o_2 = null) & (!o_2 = null | o_2 = tab) & ( !f_2 = java.lang.Object::<created> | !o_2.<created> = TRUE) & (o_2 = tab | !o_2.<created> = TRUE) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "7"))
                                             (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " !o_2 = null & !( o_2.<created> = TRUE | o_2.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "25"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "26"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")) (ifInst ""  (formula "20")))
                                                (rule "closeTrue" (formula "26"))
                                             )
                                             (branch " !o_2 = null & !( o_2.<created> = TRUE | o_2.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "f_2 = arr(1 + j_0) & o_2 = tab TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "applyEqRigid" (formula "26") (term "1,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0,1") (ifseqformula "2"))
                                                   (rule "replace_known_left" (formula "23") (term "0,0,1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "25") (term "2,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "2"))
                                                   (rule "narrowSelectArrayType" (formula "25") (term "0") (ifseqformula "13") (ifseqformula "22"))
                                                   (rule "eqSymm" (formula "25"))
                                                   (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "false_right" (formula "24"))
                                                   (rule "nnf_ex2all" (formula "23"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0,0"))
                                                   (rule "castDel" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "1") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "20"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "f_2 = arr(1 + j_0) & o_2 = tab FALSE"
                                                   (rule "close" (formula "30") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                          (branch " (!f_2 = java.lang.Object::<created> | !o_2 = null) & (!o_2 = null | o_2 = tab) & ( !f_2 = java.lang.Object::<created> | !o_2.<created> = TRUE) & (o_2 = tab | !o_2.<created> = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "andRight" (formula "21"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "21"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "21"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "21"))
                                                      (rule "notRight" (formula "22"))
                                                      (rule "notRight" (formula "22"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "false_right" (formula "25"))
                                                      (rule "applyEqRigid" (formula "3") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "8"))
                                                      (rule "applyEqRigid" (formula "24") (term "0,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "24") (term "0"))
                                                      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "23"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "false_right" (formula "24"))
                                                      (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "23") (term "0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "23"))
                                                      (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeTrue" (formula "23"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "orRight" (formula "21"))
                                                      (rule "notRight" (formula "21"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "21"))
                                                   (rule "notRight" (formula "21"))
                                                   (rule "notRight" (formula "22"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "false_right" (formula "25"))
                                                   (rule "applyEqRigid" (formula "24") (term "1,0,0,0,1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "false_right" (formula "24"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "orRight" (formula "21"))
                                                (rule "notRight" (formula "22"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: j_0 <= -2 + i_0 FALSE"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "inEqSimp_leqRight" (formula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "18"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "22") (term "1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                          (rule "add_literals" (formula "20") (term "0,1"))
                                          (rule "applyEqRigid" (formula "4") (term "0,2,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18"))
                                          (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "1,0"))
                                          (rule "times_zero_1" (formula "18") (term "0"))
                                          (rule "qeq_literals" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "applyEqRigid" (formula "18") (term "1,0,2,0") (ifseqformula "1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,2,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,2,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,2,0"))
                                          (rule "applyEqRigid" (formula "3") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " (!f_2 = java.lang.Object::<created> | !o_2 = null) & (!o_2 = null | o_2 = tab) & ( !f_2 = java.lang.Object::<created> | !o_2.<created> = TRUE) & (o_2 = tab | !o_2.<created> = TRUE) TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "8"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " !o_2 = null & !( o_2.<created> = TRUE | o_2.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "orRight" (formula "23"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "5") (term "0,1") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_right" (formula "5") (term "0,1") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "18"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                                                (rule "closeTrue" (formula "23"))
                                             )
                                             (branch " !o_2 = null & !( o_2.<created> = TRUE | o_2.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_2 = arr(i_0) & o_2 = tab TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "applyEq" (formula "4") (term "0,0,1") (ifseqformula "3"))
                                                   (rule "replace_known_right" (formula "4") (term "0,1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "3"))
                                                   (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0,1") (ifseqformula "3"))
                                                   (rule "replace_known_left" (formula "19") (term "0,0,1") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "false_right" (formula "19"))
                                                   (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,0,0,1") (ifseqformula "3"))
                                                   (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "applyEqRigid" (formula "23") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectArrayType" (formula "23") (term "0") (ifseqformula "12") (ifseqformula "20"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "3"))
                                                   (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "4"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "nnf_ex2all" (formula "20"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "commute_or" (formula "1") (term "0,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0,0"))
                                                   (rule "castDel" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,1"))
                                                   (rule "leq_literals" (formula "1") (term "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "f_2 = arr(i_0) & o_2 = tab FALSE"
                                                   (rule "close" (formula "27") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                          (branch " (!f_2 = java.lang.Object::<created> | !o_2 = null) & (!o_2 = null | o_2 = tab) & ( !f_2 = java.lang.Object::<created> | !o_2.<created> = TRUE) & (o_2 = tab | !o_2.<created> = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "andRight" (formula "18"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "18"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "18"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "18"))
                                                      (rule "notRight" (formula "19"))
                                                      (rule "notRight" (formula "19"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "false_right" (formula "22"))
                                                      (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "22") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "21") (term "1,0,0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "6"))
                                                      (rule "eqSymm" (formula "20"))
                                                      (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "closeTrue" (formula "20"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "orRight" (formula "18"))
                                                      (rule "notRight" (formula "18"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "18"))
                                                   (rule "notRight" (formula "18"))
                                                   (rule "notRight" (formula "19"))
                                                   (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "false_right" (formula "22"))
                                                   (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,0,1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "closeTrue" (formula "20"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "orRight" (formula "18"))
                                                (rule "notRight" (formula "19"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (x_arr_2 = null)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_2 != null, but x_13 Out of Bounds!)"
                                    (rule "false_right" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Null Reference (tab_1 = null)"
                                 (rule "false_right" (formula "22"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (tab_1 != null, but j Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "false_right" (formula "22"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (tab_1 = null)"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (tab_1 != null, but j Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "false_right" (formula "21"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_9 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Use Case"
                  (builtin "One Step Simplification" (formula "12"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,1,1,0,0,0"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,1,1,0,0,0"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0,1,0"))
                  (rule "translateJavaUnaryMinusInt" (formula "12") (term "1,0,0,0,0"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,0,1,0,0,0"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,2,0,1,0,0"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,2,1,1,0,1,1"))
                  (rule "neg_literal" (formula "12") (term "1,0,0,0,0"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "13"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1"))
                  (rule "mul_literals" (formula "13") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "1"))
                  (rule "mul_literals" (formula "14") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,2,1,1,0,1"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,2,1,1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,2,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0"))
                  (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_0_1"))
                  (rule "emptyStatement" (formula "20") (term "1,0,1"))
                  (rule "blockEmptyLabel" (formula "20") (term "1,0,1"))
                  (rule "blockEmpty" (formula "20") (term "1,0,1"))
                  (rule "eval_order_array_access2" (formula "20") (term "1,0,1") (inst "#v0=x") (inst "#ar1=x_arr"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1,0,1"))
                  (rule "variableDeclaration" (formula "20") (term "1,0,1") (newnames "x_arr"))
                  (rule "assignment" (formula "20") (term "1,0,1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1,1,0,1"))
                  (rule "variableDeclaration" (formula "20") (term "1,1,0,1") (newnames "x_7"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                  (rule "mul_literals" (formula "14") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                  (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnon" (formula "15"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")) (ifInst ""  (formula "5")))
                  (rule "elementOfArrayRange" (formula "15") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "16"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
                  (rule "mul_literals" (formula "12") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "pullOutSelect" (formula "15") (term "2,0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnon" (formula "15"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0,1"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1"))
                  (rule "applyEq_and_int4" (formula "15") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,0,0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "1,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "greater_equal_than_comparison_simple" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "commute_and" (formula "15") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "castDel" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15"))
                  (rule "methodCallEmpty" (formula "20") (term "1"))
                  (rule "assignmentAdditionInt" (formula "20") (term "1,1,0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "0,1,0,1,0,1"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0,1,0,1"))
                  (rule "emptyModality" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "impRight" (formula "20"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "18"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "assignment_to_primitive_array_component" (formula "21"))
                  (branch "Normal Execution (x_arr != null)"
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                     (rule "applyEq" (formula "22") (term "1,0,2,0,1,0") (ifseqformula "13"))
                     (rule "add_literals" (formula "22") (term "0,2,0,1,0"))
                     (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "13"))
                     (rule "add_literals" (formula "16") (term "1"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "13"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,2,0") (ifseqformula "12"))
                     (rule "add_literals" (formula "14") (term "0,2,0"))
                     (rule "applyEqRigid" (formula "15") (term "1,1,0,0") (ifseqformula "12"))
                     (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "13"))
                     (rule "mul_literals" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "0,0"))
                     (rule "add_zero_left" (formula "13") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0"))
                     (rule "mul_literals" (formula "16") (term "1,0"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "9"))
                     (rule "leq_literals" (formula "13") (term "0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "qeq_literals" (formula "14") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "blockEmpty" (formula "17") (term "1"))
                     (rule "postincrement" (formula "17") (term "1"))
                     (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_8"))
                     (rule "remove_parentheses_right" (formula "17") (term "1"))
                     (rule "assignmentAdditionInt" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "tryEmpty" (formula "17") (term "1"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "emptyModality" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                     (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,1"))
                     (rule "mul_literals" (formula "17") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,1,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "17") (term "1,1,0,0,1,0,0"))
                     (rule "precOfInt" (formula "17") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1"))
                     (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,1,1"))
                     (rule "add_literals" (formula "17") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "17") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "17") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,1,1"))
                     (rule "add_literals" (formula "17") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "17") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,1"))
                     (rule "add_literals" (formula "17") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "17") (term "0,1,1"))
                     (rule "leq_literals" (formula "17") (term "1,1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                     (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                     (rule "times_zero_2" (formula "17") (term "1,0,1"))
                     (rule "add_zero_right" (formula "17") (term "0,1"))
                     (rule "inEqSimp_invertInEq0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                     (rule "mul_literals" (formula "17") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                     (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "9"))
                     (rule "leq_literals" (formula "17") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "andRight" (formula "17"))
                     (branch "Case 1"
                        (rule "allRight" (formula "17") (inst "sk=k_0"))
                        (rule "orRight" (formula "17"))
                        (rule "orRight" (formula "17"))
                        (rule "inEqSimp_geqRight" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_geqRight" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "19"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfStore" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "castDel" (formula "3") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                        (rule "times_zero_2" (formula "3") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "1"))
                        (rule "add_zero_left" (formula "3") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                        (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "eqSymm" (formula "3") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfStore" (formula "4"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "castDel" (formula "4") (term "1,0"))
                        (rule "eqSymm" (formula "4") (term "0,0"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_6"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")) (ifInst ""  (formula "11")))
                        (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "eqSymm" (formula "4") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0,0"))
                        (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_7"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq_and_int4" (formula "3") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "1,0,0,0,0") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq_and_int4" (formula "4") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "commute_and" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "castDel" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "applyEq_and_int6" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,1,0,0,0"))
                        (rule "qeq_literals" (formula "3") (term "0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "k_0 = 0 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "times_zero_2" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "applyEqRigid" (formula "4") (term "1,0,2,0") (ifseqformula "3"))
                           (rule "add_literals" (formula "4") (term "0,2,0"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "16") (term "0,2,0,1"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "16") (term "0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_12"))
                           (rule "simplifySelectOfAnon" (formula "16"))
                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                           (rule "elementOfArrayRange" (formula "16") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "eqSymm" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "16") (term "2,0") (inst "selectSK=arr_13"))
                           (rule "simplifySelectOfAnon" (formula "16"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_14"))
                           (rule "simplifySelectOfAnon" (formula "17"))
                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "21")) (ifInst ""  (formula "7")))
                           (rule "elementOfArrayRange" (formula "17") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "eqSymm" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "17") (term "2,0") (inst "selectSK=arr_15"))
                           (rule "simplifySelectOfAnon" (formula "17"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
                           (rule "hideAuxiliaryEq" (formula "17"))
                           (rule "applyEq_and_int4" (formula "16") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "16") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEq_and_int4" (formula "17") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "17") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "commute_and" (formula "16") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "castDel" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0"))
                           (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                           (rule "mul_literals" (formula "17") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                           (rule "commute_and" (formula "16") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "castDel" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0"))
                           (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "11"))
                           (rule "leq_literals" (formula "16") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                           (rule "mul_literals" (formula "16") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "16"))
                           (rule "andLeft" (formula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_literals" (formula "15") (term "0"))
                           (rule "leq_literals" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                        (branch "k_0 = 0 FALSE"
                           (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "18"))
                           (rule "add_zero_right" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "false_right" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                           (rule "leq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                           (rule "add_zero_right" (formula "17") (term "0,2,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "pullOutSelect" (formula "17") (term "1") (inst "selectSK=arr_8"))
                           (rule "simplifySelectOfAnon" (formula "17"))
                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "21")) (ifInst ""  (formula "9")))
                           (rule "elementOfArrayRange" (formula "17") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "eqSymm" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_9"))
                           (rule "simplifySelectOfAnon" (formula "18"))
                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")) (ifInst ""  (formula "9")))
                           (rule "elementOfArrayRange" (formula "18") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "eqSymm" (formula "18") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "17") (term "2,0") (inst "selectSK=arr_10"))
                           (rule "simplifySelectOfAnon" (formula "17"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
                           (rule "hideAuxiliaryEq" (formula "17"))
                           (rule "pullOutSelect" (formula "18") (term "2,0") (inst "selectSK=arr_11"))
                           (rule "simplifySelectOfAnon" (formula "18"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "applyEq_and_int4" (formula "17") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "17") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEq_and_int4" (formula "18") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "18") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "commute_and" (formula "17") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "castDel" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
                           (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "17") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "17"))
                           (rule "hideAuxiliaryEq" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "applyEq_and_int6" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "18") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "18") (term "0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "allLeft" (formula "19") (inst "t=k_0"))
                           (rule "replaceKnownSelect_taclet00200001_7" (formula "19") (term "0,1"))
                           (rule "replaceKnownSelect_taclet00200001_11" (formula "19") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00200001_14" (formula "19") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00200001_15" (formula "19") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "19") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "17") (inst "sk=f_1"))
                        (rule "allRight" (formula "17") (inst "sk=o_1"))
                        (rule "orRight" (formula "17"))
                        (rule "orRight" (formula "17"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_1_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "17"))
                           (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "22"))
                           (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "15")))
                           (rule "closeTrue" (formula "21"))
                        )
                        (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_LOOP<<anonHeapFunction>> = TRUE) FALSE"
                           (rule "close" (formula "21") (ifseqformula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (x_arr = null)"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr != null, but x_7 Out of Bounds!)"
                     (rule "false_right" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "closeFalse" (formula "14"))
                  )
               )
            )
            (branch "Null Reference (tab_1 = null)"
               (rule "false_right" (formula "14"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (tab_1 != null, but i_1 Out of Bounds!)"
               (rule "false_right" (formula "14"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
               (rule "qeq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "closeFalse" (formula "10"))
            )
         )
         (branch "if x_4 false"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_tab = null)"
         (rule "false_right" (formula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (_tab = null)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1"))
   (rule "translateJavaAddInt" (formula "8") (term "0,2,1,1,0,1"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "10") (term "0,2,1,1,0"))
   (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "b_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "compound_less_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "assignment" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
   (rule "assignment_read_length" (formula "13"))
   (branch "Normal Execution (_tab != null)"
      (builtin "One Step Simplification" (formula "13"))
      (rule "less_than_comparison_simple" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "emptyModality" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "impRight" (formula "13"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "11"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
      (rule "polySimp_elimOne" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "10"))
      (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
      (rule "add_literals" (formula "10") (term "1,0"))
      (rule "times_zero_1" (formula "10") (term "0"))
      (rule "leq_literals" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "tryEmpty" (formula "12") (term "1"))
      (rule "emptyModality" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "eqSymm" (formula "12") (term "1,0,0,1"))
      (rule "applyEq" (formula "12") (term "1,1,1,0,0,0,0") (ifseqformula "8"))
      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "Class_invariant_axiom_for_InsertionSort" (formula "12") (term "0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "allRight" (formula "12") (inst "sk=f_0"))
      (rule "allRight" (formula "12") (inst "sk=o_0"))
      (rule "orRight" (formula "12"))
      (rule "orRight" (formula "12"))
      (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=f_0_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
      (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "closeTrue" (formula "15"))
   )
   (branch "Null Reference (_tab = null)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
