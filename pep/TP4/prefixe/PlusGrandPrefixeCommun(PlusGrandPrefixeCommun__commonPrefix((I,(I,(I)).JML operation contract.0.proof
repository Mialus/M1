\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 05 08:42:01 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Apr 05 08:42:01 CEST 2016
name=PlusGrandPrefixeCommun[PlusGrandPrefixeCommun\\:\\:commonPrefix([I,[I,[I)].JML operation contract.0
contract=PlusGrandPrefixeCommun[PlusGrandPrefixeCommun\\:\\:commonPrefix([I,[I,[I)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Pierre" ) (keyVersion "f29c982fc6c75827991e94a2a905e3419d01d6ee"))
(keyLog "1" (keyUser "Pierre" ) (keyVersion "f29c982fc6c75827991e94a2a905e3419d01d6ee"))

(autoModeTime "2820")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "18") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "18") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "18") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "17"))
(rule "eqSymm" (formula "16"))
(rule "eqSymm" (formula "14"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
(builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "15"))
(builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "6"))
(rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,1,0,1,0,0,0,1"))
(rule "assignment" (formula "18") (term "1"))
(builtin "One Step Simplification" (formula "18"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "18") (term "0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "18") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_PlusGrandPrefixeCommun" (formula "10") (ifseqformula "3"))
(rule "true_left" (formula "10"))
(rule "applyEq_and_gen0" (formula "17") (term "1,0,0,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_commonPrefix,savedHeapBefore_commonPrefix,_aBefore_commonPrefix,_bBefore_commonPrefix,_cBefore_commonPrefix"))
(builtin "One Step Simplification" (formula "17"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
(rule "for_to_while" (formula "17") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "assignment" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(builtin "Loop Invariant" (formula "17") (newnames "variant,b_0,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
   (rule "qeq_literals" (formula "17") (term "0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "eqSymm" (formula "17") (term "1,1,0,1"))
   (rule "eqSymm" (formula "17") (term "0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0,1"))
   (rule "nnf_imp2or" (formula "17") (term "0,1"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "add_literals" (formula "17") (term "0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "17") (term "0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "arrayLengthNotNegative" (formula "9") (term "1"))
   (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "inEqSimp_geqRight" (formula "18"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "arrayLengthNotNegative" (formula "9") (term "0"))
   (rule "arrayLengthIsAShort" (formula "10") (term "0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "arrayLengthIsAShort" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "arrayLengthIsAShort" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "arrayLengthNotNegative" (formula "10") (term "1"))
   (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
   (rule "qeq_literals" (formula "10") (term "0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "closeFalse" (formula "10"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,1,0,1,1"))
   (rule "andLeft" (formula "11"))
   (rule "impRight" (formula "20"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "eqSymm" (formula "15") (term "1,1,0"))
   (rule "eqSymm" (formula "15") (term "0,1,0"))
   (rule "eqSymm" (formula "23") (term "0,1,0,1,0,0,1,1,1,0,1"))
   (rule "eqSymm" (formula "23") (term "1,0,0,1,0,1,1,1,0,1"))
   (rule "eqSymm" (formula "23") (term "1,1,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "23") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "23") (term "0,1,1,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "13"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_2"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "rtrn"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "returnExpr"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "23") (term "1,0,0,1"))
   (rule "blockReturn" (formula "23") (term "1,0,1,0,1"))
   (rule "blockThrow" (formula "23") (term "1,0,0,1"))
   (rule "blockReturn" (formula "23") (term "1,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "23") (term "0,1,0,0,1,1,1,0,1"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "cnf_rightDist" (formula "14") (term "0"))
   (rule "distr_forallAnd" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "commute_or" (formula "15") (term "0"))
   (rule "compound_assignment_3_nonsimple" (formula "16") (term "1"))
   (rule "arrayLengthIsAShort" (formula "9") (term "0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "arrayLengthNotNegative" (formula "8") (term "1"))
   (rule "arrayLengthNotNegative" (formula "10") (term "0"))
   (rule "arrayLengthIsAShort" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "arrayLengthIsAShort" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "arrayLengthNotNegative" (formula "11") (term "1"))
   (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_6"))
   (rule "compound_assignment_3_nonsimple" (formula "27") (term "1"))
   (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_7"))
   (rule "compound_assignment_2" (formula "19") (term "1") (inst "#v=x_8"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_8"))
   (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_9"))
   (rule "assignment" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_10"))
   (rule "assignment_read_length" (formula "19"))
   (branch "Normal Execution (_a != null)"
      (builtin "One Step Simplification" (formula "19"))
      (rule "less_than_comparison_simple" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
      (rule "compound_assignment_1_new" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x_7"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_11"))
      (rule "compound_assignment_2" (formula "27") (term "1") (inst "#v=x_12"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_12"))
      (rule "compound_less_than_comparison_2" (formula "27") (term "1") (inst "#v1=x_14") (inst "#v0=x_13"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_13"))
      (rule "assignment" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_14"))
      (rule "assignment_read_length" (formula "27"))
      (branch "Normal Execution (_a != null)"
         (builtin "One Step Simplification" (formula "27"))
         (rule "less_than_comparison_simple" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0"))
         (rule "compound_assignment_1_new" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "ifElseSplit" (formula "19"))
         (branch "if x_7 true"
            (builtin "One Step Simplification" (formula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "28") (term "0,0,1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_homoInEq1" (formula "17"))
            (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "1,0"))
            (rule "times_zero_1" (formula "17") (term "0"))
            (rule "leq_literals" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "9") (term "1") (ifseqformula "15"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "emptyModality" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "closeTrue" (formula "18"))
         )
         (branch "if x_7 false"
            (builtin "One Step Simplification" (formula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_15"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_16"))
            (rule "assignment_read_length" (formula "19"))
            (branch "Normal Execution (_b != null)"
               (builtin "One Step Simplification" (formula "19"))
               (rule "less_than_comparison_simple" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "emptyModality" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "notRight" (formula "19"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0"))
               (rule "qeq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "ifElseSplit" (formula "26"))
               (branch "if x_11 true"
                  (builtin "One Step Simplification" (formula "27"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_11 false"
                  (builtin "One Step Simplification" (formula "27"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_17"))
                  (rule "assignment" (formula "26") (term "1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_18"))
                  (rule "assignment_read_length" (formula "26"))
                  (branch "Normal Execution (_b != null)"
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "less_than_comparison_simple" (formula "26") (term "1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                     (rule "blockEmpty" (formula "26") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0"))
                     (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "ifSplit" (formula "26"))
                     (branch "if x_6 true"
                        (builtin "One Step Simplification" (formula "27"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_19"))
                        (rule "compound_equality_comparison_2" (formula "26") (term "1") (inst "#v1=x_21") (inst "#v0=x_20"))
                        (rule "variableDeclarationAssign" (formula "26") (term "1"))
                        (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_20"))
                        (rule "assignment_array2" (formula "26"))
                        (branch "Normal Execution (_a != null)"
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_6"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "7")))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "26") (term "1"))
                           (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_21"))
                           (rule "assignment_array2" (formula "26"))
                           (branch "Normal Execution (_b != null)"
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=arr_7"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "8")))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "equality_comparison_simple" (formula "26") (term "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "eqSymm" (formula "26") (term "0,0,1,0"))
                              (rule "ifElseSplit" (formula "26"))
                              (branch "if x_19 true"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eval_order_array_access3" (formula "27") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                                 (branch "ArrayIndexOutOfBounds (i<0 | i>=_c.length)"
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "17")))
                                    (rule "inEqSimp_ltRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "13"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "Normal Execution"
                                    (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                    (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_arr"))
                                    (rule "assignment" (formula "27") (term "1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                    (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_22"))
                                    (rule "assignment" (formula "27") (term "1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                    (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_23"))
                                    (rule "assignment_array2" (formula "27"))
                                    (branch "Normal Execution (_a != null)"
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "replaceKnownSelect_taclet000101001_0" (formula "27") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000101001_1" (formula "27") (term "0,1,0"))
                                       (rule "assignment_to_primitive_array_component" (formula "27"))
                                       (branch "Normal Execution (x_arr != null)"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "blockEmpty" (formula "27") (term "1"))
                                          (rule "postincrement" (formula "27") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "27") (term "1") (inst "#v=x"))
                                          (rule "variableDeclarationAssign" (formula "27") (term "1"))
                                          (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_24"))
                                          (rule "unusedLabel" (formula "27") (term "1"))
                                          (rule "remove_parentheses_right" (formula "27") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "27") (term "1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "translateJavaAddInt" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "27") (term "1"))
                                          (rule "assignment" (formula "27") (term "1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "tryEmpty" (formula "27") (term "1"))
                                          (rule "methodCallEmpty" (formula "27") (term "1"))
                                          (rule "emptyModality" (formula "27") (term "1"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")))
                                          (rule "eqSymm" (formula "27") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0,1"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0,1"))
                                          (rule "precOfInt" (formula "27") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1"))
                                          (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,1,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,1"))
                                          (rule "add_literals" (formula "27") (term "1,0,1,1"))
                                          (rule "times_zero_1" (formula "27") (term "0,1,1"))
                                          (rule "leq_literals" (formula "27") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                          (rule "mul_literals" (formula "27") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,0") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "27") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "cut_direct" (formula "27") (term "1"))
                                          (branch "CUT: c.length >= 1 + i_0 TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "andRight" (formula "28"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "28") (inst "sk=j_3"))
                                                (rule "orRight" (formula "28"))
                                                (rule "orRight" (formula "28"))
                                                (rule "inEqSimp_leqRight" (formula "28"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "pullOutSelect" (formula "30") (term "1,1") (inst "selectSK=arr_11"))
                                                (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "11")))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "31") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "30") (term "0,0") (inst "selectSK=arr_12"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "12")))
                                                (rule "eqSymm" (formula "31") (term "0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "30") (term "0"))
                                                (rule "pullOutSelect" (formula "30") (term "0,1") (inst "selectSK=arr_13"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "31") (term "1"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_14"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "commute_and" (formula "31"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "j_3 = i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "applyEq" (formula "31") (term "0,2,0,1") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "31") (term "1"))
                                                   (rule "applyEqRigid" (formula "31") (term "0,2,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "qeq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "close" (formula "29") (ifseqformula "3"))
                                                )
                                                (branch "j_3 = i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "31") (term "0"))
                                                   (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "23"))
                                                   (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "qeq_literals" (formula "23") (term "0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "commute_and" (formula "30"))
                                                   (rule "allLeft" (formula "21") (inst "t=j_3"))
                                                   (rule "replaceKnownSelect_taclet0000100000101001_8" (formula "21") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet0000100000101001_5" (formula "21") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000100000101001_9" (formula "21") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000100000101001_6" (formula "21") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "allLeft" (formula "23") (inst "t=j_3"))
                                                   (rule "replaceKnownSelect_taclet0000100000101001_5" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet0000100000101001_11" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000100000101001_6" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000100000101001_12" (formula "23") (term "0,1"))
                                                   (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "23") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "28") (inst "sk=f_3"))
                                                (rule "allRight" (formula "28") (inst "sk=o_3"))
                                                (rule "orRight" (formula "28"))
                                                (rule "orRight" (formula "28"))
                                                (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_3_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "CUT: c.length >= 1 + i_0 FALSE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "3"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "16"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0"))
                                             (rule "add_zero_right" (formula "16") (term "0"))
                                             (rule "leq_literals" (formula "16"))
                                             (rule "closeFalse" (formula "16"))
                                          )
                                       )
                                       (branch "Null Reference (x_arr = null)"
                                          (rule "false_right" (formula "28"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr != null, but x_22 Out of Bounds!)"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                          (rule "false_right" (formula "28"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "16"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch "Null Reference (_a = null)"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (_a != null, but i Out of Bounds!)"
                                       (rule "false_right" (formula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "1") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "if x_19 false"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "blockBreakNoLabel" (formula "27") (term "1"))
                                 (rule "blockBreakLabel" (formula "27") (term "1"))
                                 (rule "blockEmpty" (formula "27") (term "1"))
                                 (rule "tryEmpty" (formula "27") (term "1"))
                                 (rule "methodCallEmpty" (formula "27") (term "1"))
                                 (rule "emptyModality" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "methodCallReturn" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "assignment" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "methodCallEmpty" (formula "27") (term "1"))
                                 (rule "tryEmpty" (formula "27") (term "1"))
                                 (rule "emptyModality" (formula "27") (term "1"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "16")))
                                 (rule "eqSymm" (formula "27") (term "1,0,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (term "1,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                 (rule "qeq_literals" (formula "27") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "27") (term "0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "Class_invariant_axiom_for_PlusGrandPrefixeCommun" (formula "27") (term "1,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "andRight" (formula "27"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "27") (inst "sk=j_2"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "pullOutSelect" (formula "29") (term "0,0") (inst "selectSK=arr_8"))
                                    (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "10")))
                                    (rule "eqSymm" (formula "30") (term "0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "29") (term "0,1") (inst "selectSK=arr_9"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "29") (term "0,0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                    (rule "eqSymm" (formula "30") (term "0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "allLeft" (formula "19") (inst "t=j_2"))
                                    (rule "replaceKnownSelect_taclet010000101001_4" (formula "19") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet010000101001_8" (formula "19") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000101001_5" (formula "19") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000101001_9" (formula "19") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "19"))
                                    (rule "allLeft" (formula "21") (inst "t=j_2"))
                                    (rule "replaceKnownSelect_taclet010000101001_6" (formula "21") (term "0,1"))
                                    (rule "replaceKnownSelect_taclet010000101001_8" (formula "21") (term "1,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000101001_7" (formula "21") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000101001_9" (formula "21") (term "1,1"))
                                    (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "27") (inst "sk=f_2"))
                                    (rule "allRight" (formula "27") (inst "sk=o_2"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_2_0"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "closeTrue" (formula "30"))
                                 )
                              )
                           )
                           (branch "Null Reference (_b = null)"
                              (builtin "One Step Simplification" (formula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_b != null, but i Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                              (rule "false_right" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Null Reference (_a = null)"
                           (builtin "One Step Simplification" (formula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (_a != null, but i Out of Bounds!)"
                           (rule "false_right" (formula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_6 false"
                        (builtin "One Step Simplification" (formula "27"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (_b = null)"
                     (builtin "One Step Simplification" (formula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Null Reference (_b = null)"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (_a = null)"
         (builtin "One Step Simplification" (formula "28"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (_a = null)"
      (rule "false_right" (formula "20"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "19"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "eqSymm" (formula "14") (term "0,1,0"))
   (rule "eqSymm" (formula "14") (term "1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "12"))
   (rule "inEqSimp_commuteLeq" (formula "13"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_0_1"))
   (rule "blockEmpty" (formula "22") (term "1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "cnf_rightDist" (formula "14") (term "0"))
   (rule "distr_forallAnd" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "commute_or" (formula "15") (term "0"))
   (rule "compound_assignment_3_nonsimple" (formula "23") (term "1"))
   (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
   (rule "compound_assignment_2" (formula "23") (term "1") (inst "#v=x_1"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_1"))
   (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_3"))
   (rule "assignment_read_length" (formula "23"))
   (branch "Normal Execution (_a != null)"
      (builtin "One Step Simplification" (formula "23"))
      (rule "less_than_comparison_simple" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
      (rule "compound_assignment_1_new" (formula "23") (term "1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "arrayLengthNotNegative" (formula "10") (term "1"))
      (rule "arrayLengthIsAShort" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1"))
      (rule "arrayLengthIsAShort" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "ifElseSplit" (formula "26"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "27"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "19"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "assignment" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "1") (ifseqformula "16"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "17"))
         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,0"))
         (rule "times_zero_1" (formula "17") (term "0"))
         (rule "leq_literals" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (rule "emptyModality" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "methodCallReturn" (formula "25") (term "1"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "methodCallEmpty" (formula "25") (term "1"))
         (rule "tryEmpty" (formula "25") (term "1"))
         (rule "emptyModality" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "13")) (ifInst ""  (formula "15")))
         (rule "eqSymm" (formula "25") (term "1,0,0,1"))
         (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "14"))
         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
         (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0"))
         (rule "add_literals" (formula "25") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "25") (term "0,0,0"))
         (rule "leq_literals" (formula "25") (term "0,0"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "Class_invariant_axiom_for_PlusGrandPrefixeCommun" (formula "25") (term "1,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "andRight" (formula "25"))
         (branch "Case 1"
            (rule "allRight" (formula "25") (inst "sk=j_1"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "27") (term "1"))
            (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=arr_4"))
            (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "8")))
            (rule "eqSymm" (formula "28") (term "0"))
            (rule "eqSymm" (formula "28") (term "1"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=arr_5"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "7")))
            (rule "eqSymm" (formula "28") (term "0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
            (rule "times_zero_1" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
            (rule "leq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "allLeft" (formula "18") (inst "t=j_1"))
            (rule "replaceKnownSelect_taclet0002_2" (formula "18") (term "0,1"))
            (rule "replaceKnownSelect_taclet0002_4" (formula "18") (term "1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_3" (formula "18") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_5" (formula "18") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "3"))
            (rule "qeq_literals" (formula "18") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0"))
            (rule "leq_literals" (formula "18") (term "0,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "applyEq" (formula "28") (term "1") (ifseqformula "18"))
            (rule "allLeft" (formula "20") (inst "t=j_1"))
            (rule "replaceKnownSelect_taclet0002_0" (formula "20") (term "0,1"))
            (rule "replaceKnownSelect_taclet0002_4" (formula "20") (term "1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_1" (formula "20") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0002_5" (formula "20") (term "1,1"))
            (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
            (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "20") (term "0,0,1"))
            (rule "leq_literals" (formula "20") (term "0,1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "20"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "25") (inst "sk=f_1"))
            (rule "allRight" (formula "25") (inst "sk=o_1"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_1_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
            (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "closeTrue" (formula "28"))
         )
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "27"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
         (rule "add_literals" (formula "16") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "qeq_literals" (formula "16") (term "0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
         (rule "assignment_read_length" (formula "26"))
         (branch "Normal Execution (_b != null)"
            (builtin "One Step Simplification" (formula "26"))
            (rule "less_than_comparison_simple" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "26") (term "1"))
            (rule "emptyModality" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "impRight" (formula "26"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
            (rule "inEqSimp_homoInEq1" (formula "18"))
            (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "1,0"))
            (rule "times_zero_1" (formula "18") (term "0"))
            (rule "leq_literals" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "12") (term "1") (ifseqformula "15"))
            (rule "methodCallReturn" (formula "25") (term "1"))
            (rule "assignment" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "methodCallEmpty" (formula "25") (term "1"))
            (rule "tryEmpty" (formula "25") (term "1"))
            (rule "emptyModality" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")))
            (rule "eqSymm" (formula "25") (term "1,0,0,1"))
            (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0,0"))
            (rule "add_literals" (formula "25") (term "1,0,1,0,0"))
            (rule "times_zero_1" (formula "25") (term "0,1,0,0"))
            (rule "leq_literals" (formula "25") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
            (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "25") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "Class_invariant_axiom_for_PlusGrandPrefixeCommun" (formula "25") (term "1,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "andRight" (formula "25"))
            (branch "Case 1"
               (rule "allRight" (formula "25") (inst "sk=j_0"))
               (rule "orRight" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "inEqSimp_leqRight" (formula "25"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "26"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "pullOutSelect" (formula "27") (term "1,1") (inst "selectSK=arr_0"))
               (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
               (rule "eqSymm" (formula "28") (term "0"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "8")))
               (rule "eqSymm" (formula "28") (term "0"))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
               (rule "times_zero_1" (formula "2") (term "0,0"))
               (rule "add_zero_left" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "2"))
               (rule "leq_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "allLeft" (formula "18") (inst "t=j_0"))
               (rule "replaceKnownSelect_taclet00102_0" (formula "18") (term "0,1"))
               (rule "replaceKnownSelect_taclet00102_4" (formula "18") (term "1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00102_1" (formula "18") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00102_5" (formula "18") (term "1,1"))
               (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
               (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
               (rule "leq_literals" (formula "18") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "18") (term "0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "applyEq" (formula "28") (term "1") (ifseqformula "18"))
               (rule "allLeft" (formula "20") (inst "t=j_0"))
               (rule "replaceKnownSelect_taclet00102_4" (formula "20") (term "1,1"))
               (rule "replaceKnownSelect_taclet00102_2" (formula "20") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00102_5" (formula "20") (term "1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00102_3" (formula "20") (term "0,1"))
               (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
               (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "20") (term "0,0,1"))
               (rule "leq_literals" (formula "20") (term "0,1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "3"))
               (rule "qeq_literals" (formula "20") (term "0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "closeFalse" (formula "20"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "25") (inst "sk=f_0"))
               (rule "allRight" (formula "25") (inst "sk=o_0"))
               (rule "orRight" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
               (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "closeTrue" (formula "28"))
            )
         )
         (branch "Null Reference (_b = null)"
            (builtin "One Step Simplification" (formula "27"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (_a = null)"
      (builtin "One Step Simplification" (formula "24"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
